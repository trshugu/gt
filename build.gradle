/*
*/


// Javaプラグインの使用
apply plugin: "java"
// build clean assemble check タスクが使えるようになる。

/*
task distribution << {
    println "We build the zip with version=$version"
}

task release(dependsOn: 'distribution') << {
    println 'We release now'
}

// taskGraphにreleaseが含まれているかいないか
gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(release)) {
        version = '1.0'
    } else {
        version = '1.0-SNAPSHOT'
    }
}
*/

/*
// デフォルトタスク
defaultTasks 'clean', 'run'

task clean << {
    println 'Default Cleaning!'
}

task run << {
    println 'Default Running!'
}

task other << {
    println "I'm not a default task!"
}
*/

/*
// 拡張タスクプロパティ
task myTask {
    ext.myProperty = "myValue"
}

task printTaskProperties << {
    println myTask.myProperty
}
*/

/*
// 略記法
task hello << {
    println 'Hello world!'
}

hello.doLast {
    println "Greetings from the $hello.name task."
}
*/

/*
// APIからタスクにアクセスする - アクションの追加
task hello << {
  println 'Hello Earth'
}

hello.doFirst {
  println 'Hello Venus'
}

hello.doLast {
  println 'Hello Mars'
}

// <<はdoLastの単なるエイリアスです。
hello << {
  println 'Hello Jupiter'
}
*/

/*
// APIからタスクにアクセスする - 依存関係の追加
4.times { counter ->
  task "task$counter" << {
    println "I'm task number $counter"
  }
}
task0.dependsOn task2, task3
*/


/*
// 動的なタスク定義
4.times { counter ->
  task "task$counter" << {
    println "I'm task number $counter"
  }
}
*/

/*
// 遅延評価の依存関係
task taskX(dependsOn: 'taskY') << {
  println 'taskX'
}

task taskY << {
  println 'taskY'
}
*/

/*
// 依存関係
task hell << {
  println 'Hell world!'
}

task intro(dependsOn: hell) << {
  println "I'm Gradle"
}
*/

/*
task count << {
  4.times { print "$it " }
}
*/

/*
task upper << {
  String someString = 'mY_nAmE'
  println "Original: " + someString 
  println "Upper case: " + someString.toUpperCase()
}
*/

/*
task hell <<
{
  println "helll"
}
*/


/*
task hell {
  doLast
  {
    println "hell w"
  }
}
*/
